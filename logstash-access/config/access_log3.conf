input {
        beats {
                port => 5044
                type => "beats"
  
        }
        tcp {
                port => 5000
                type => "tcp"
        }
        file {
                path => "/usr/share/logstash/logs/n3/*"
                mode => "read"
                file_completed_action => "log"
                file_completed_log_path => "/tmp/dumbo_fileinput.log"
                sincedb_path => "/tmp/dumbo_dbfile"
                type => "file"
        }
}

filter {
## GROK filter below matches Jira access log format
## In case of beats as input source the information which node
## sends the information is provided by filebeat
    if [type] == "beats" {
            grok {
              match => { "message" => "%{IPORHOST:clientip} %{NOTSPACE:sessionid} %{NOTSPACE:user} \[%{GREEDYDATA:logdate}\] %{GREEDYDATA:requrl} %{NOTSPACE:status} (-|%{INT:size}) %{INT:duration} %{QS:referrer} %{QS:useragent} %{GREEDYDATA:session2}" }
            }
            # we need this conversion so that we can later use aggregations like 'average', 'max' etc
            mutate {
              convert   => { "duration" => "integer" }
              convert   => { "size" => "integer" }
              add_field => { "node" => "%{[fields][node]}"}
            }
    }
## if files are sent via tcp or fetch from a directory the information of which node is the source
## needs to be added to the file / tcp stream
## e.g. cat logfile | sed 's/^/nodeX /g' | nc localhost 5000
## therefore the pattern is slightly different
    else {
            grok {
              match => { "message" => "%{NOTSPACE:node} %{IPORHOST:clientip} %{NOTSPACE:sessionid} %{NOTSPACE:user} \[%{GREEDYDATA:logdate}\] %{GREEDYDATA:requrl} %{NOTSPACE:status} (-|%{INT:size}) %{INT:duration} %{QS:referrer} %{QS:useragent} %{GREEDYDATA:session2}" }
            }
            mutate {
              convert => { "duration" => "integer" }
              convert => { "size" => "integer" }
            }
    }
    date {
        match => [ "logdate", "dd/MMM/yyyy:HH:mm:ss Z" ]
        target => "@timestamp"
    }
}

output {
    stdout { codec => rubydebug }
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "jira-access-%{+YYYY.MM.dd}"
    }
}